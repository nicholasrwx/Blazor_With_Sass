@import "mixins";
@import "variables";

body {
  background-color: #b1bbb9;
}

.spacer {
  display: inline-block;
  width: 10rem;
  height: 50rem;
  background: transparent;
}

.sectionTwo {
  display: grid;
  grid-template-rows: 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-areas: "one two three" "four five six" "seven eight nine";
  column-gap: 0.1rem;
  row-gap: 0.1rem;
  justify-self: center;
  justify-items: center;
  align-items: center;
  width: 17rem;
  height: 20rem;
  border: solid;
  border-width: 0.3rem;
  border-color: black;
}

.summonTiles {
  > div {
    transform-style: preserve-3d;
    transition: transform 0.8s;

    &.tile {
      &__one {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.4s,
          0.4s
        );
        @include before(
          rotate3d(-1, 1, 0, 180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem,
          "Please"
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(-1, 1, 0, -180deg);
        }
      }

      &__two {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.3s,
          0.3s
        );
        @include before(
          rotate3d(1, 0, 0, 180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(-1, 0, 0, -180deg);
        }
      }

      &__three {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.4s,
          0.4s
        );
        @include before(
          rotate3d(1, 1, 0, 180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem,
          "Hire"
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(1, 1, 0, -180deg);
        }
      }

      &__four {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.25s,
          0.25s
        );
        @include before(
          rotate3d(0, 1, 0, 180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(0, 1, 0, -180deg);
        }
      }

      &__five {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.2s,
          0.2s
        );
        @include before(
          rotate3d(1, 0, 0, 180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem,
          "Me"
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(1, 0, 0, -180deg);
        }
      }

      &__six {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.25s,
          0.25s
        );
        @include before(
          rotate3d(0, 1, 0, -180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(0, 1, 0, 180deg);
        }
      }

      &__seven {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.35s,
          0.35s
        );
        @include before(
          rotate3d(-1, -1, 0, 180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(-1, -1, 0, -180deg);
        }
      }

      &__eight {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.3s,
          0.3s
        );
        @include before(
          rotate3d(1, 0, 0, 180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(1, 0, 0, -180deg);
        }
      }

      &__nine {
        @include summonTileProperties(
          translate(0rem, 0rem),
          5rem,
          6rem,
          0.35s,
          0.35s
        );
        @include before(
          rotate3d(1, -1, 0, -180deg),
          $redPink,
          5rem,
          6rem,
          0.7rem,
          ":)"
        );
        @include summonAfter($teilGreen, 5rem, 6rem, 0.7rem);

        &:hover {
          transform: rotate3d(1, -1, 0, 180deg);
        }
      }
    }
  }
}

.dismissTiles {
  > div {
    transform-style: preserve-3d;
    transition: transform 0.8s;

    &.tile {
      &__one {
        @include dismissAfter();
        @include dismissTileProperties(translate(-30rem, -15rem), 0.2s, 0.2s);
      }

      &__two {
        @include dismissAfter();
        @include dismissTileProperties(translate(0rem, -15rem), 0.3s, 0.3s);
      }

      &__three {
        @include dismissAfter();
        @include dismissTileProperties(translate(30rem, -15rem), 0.2s, 0.2s);
      }

      &__four {
        @include dismissAfter();
        @include dismissTileProperties(translate(-30rem, 0rem), 0.35s, 0.35s);
      }

      &__five {
        @include dismissAfter();
        @include dismissTileProperties(translate(0rem, 0rem), 0.4s, 0.4s);
      }

      &__six {
        @include dismissAfter();
        @include dismissTileProperties(translate(30rem, 0rem), 0.35s, 0.35s);
      }

      &__seven {
        @include dismissAfter();
        @include dismissTileProperties(translate(-30rem, 15rem), 0.25s, 0.25s);
      }

      &__eight {
        @include dismissAfter();
        @include dismissTileProperties(translate(0rem, 15rem), 0.3s, 0.3s);
      }

      &__nine {
        @include dismissAfter();
        @include dismissTileProperties(translate(30rem, 15rem), 0.25s, 0.25s);
      }
    }
  }
}

.tile {
  &__one {
    @include tileProperties(translate(-30rem, -15rem), one);
  }

  &__two {
    @include tileProperties(translate(0rem, -15rem), two);
  }

  &__three {
    @include tileProperties(translate(30rem, -15rem), three);
  }

  &__four {
    @include tileProperties(translate(-30rem, 0rem), four);
  }

  &__five {
    @include tileProperties(translate(0rem, 0rem), five);
  }

  &__six {
    @include tileProperties(translate(30rem, 0rem), six);
  }

  &__seven {
    @include tileProperties(translate(-30rem, 15rem), seven);
  }

  &__eight {
    @include tileProperties(translate(0rem, 15rem), eight);
  }

  &__nine {
    @include tileProperties(translate(30rem, 15rem), nine);
  }
}

.reactiveGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-areas: "one two";
  column-gap: 0.1rem;
  justify-self: center;
  justify-items: center;
  align-items: center;
  width: 90vw;
  height: 90vh;
  border: solid;
  border-width: 0.3rem;
  border-color: black;
}

.reactiveElement {
  grid-area: one;
  background: paleturquoise;
  content: "";
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.movingContainer {
  background: transparent;
  content: "";
  width: 15rem;
  height: 15rem;
  border: 0.2rem solid black;
  --pos-x: 0px;
  --pos-y: 0px;

  & > .movingBlock {
    z-index: -1;
    width: 1rem;
    height: 1rem;
    background: blue;
    content: "";
    transform: translate(var(--pos-x), var(--pos-y));
  }
}

.reactiveBackground {
    grid-area: two;
    background: linear-gradient(#833AB4 0%, #FD1D1D 50%, #FCB045);
    width: 100%;
    height: 100%;
    display: grid;
    justify-self: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas: "c1 c2" "c3 c4";
    column-gap: 0.1rem;
    row-gap: 0.1rem;
    border: solid;
    border-width: 0.3rem;
    border-color: black;
}

.reactiveContainer {
    &-1 {
        grid-area: c1;
        background: transparent;
        width: 30%;
        height: 30%;
        border: 0.2rem solid transparent;
        border-radius: 0.2rem;

        & > .block-1 {
            width: 50%;
            height: 50%;
            background-image: url('../images/scope-res-operator-transparent.png');
            background-size: contain;
            background-position: center;
            background-repeat: no-repeat;
            transform: translate(var(--con-x, 0px), var(--con-y, 0px));
        }
    }

    &-2 {
        grid-area: c2;
        background: transparent;
        width: 30%;
        height: 30%;
        border: 0.2rem solid transparent;
        border-radius: 0.2rem;

        & > .block-2 {
            width: 50%;
            height: 50%;
            background-image: url('../images/hash-transparent.png');
            background-size: contain;
            background-position: center;
            background-repeat: no-repeat;
            transform: translate(var(--con-x, 0px), var(--con-y, 0px));
        }
    }

    &-3 {
        grid-area: c3;
        background: transparent;
        width: 30%;
        height: 30%;
        border: 0.2rem solid transparent;
        border-radius: 0.2rem;

        & > .block-3 {
            width: 50%;
            height: 50%;
            background-image: url('../images/code-tag-transparent.png');
            background-size: contain;
            background-position: center;
            background-repeat: no-repeat;
            transform: translate(var(--con-x, 0px), var(--con-y, 0px));
        }
    }

    &-4 {
        grid-area: c4;
        background: transparent;
        width: 30%;
        height: 30%;
        border: 0.2rem solid transparent;
        border-radius: 0.2rem;

        & > .block-4 {
            background-image: url('../images/code-blocks-transparent.png');
            background-size: contain;
            background-position: center;
            background-repeat: no-repeat;
            width: 50%;
            height: 50%;
            transform: translate(var(--con-x, 0px), var(--con-y, 0px));
        }
    }
}
