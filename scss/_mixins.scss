@import "variables";

@mixin onSummon($fadeInColor, $duration: 0.8s) {
  @keyframes fadeIn {
    0% {
      background-color: $fadeInColor;
      opacity: 0;
      width: 10rem;
      height: 12rem;
      border-radius: 1.4rem;
    }

    100% {
      background-color: $fadeInColor;
      opacity: 1;
      width: 5rem;
      height: 6rem;
      border-radius: 0.7rem;
    }
  }

  animation: fadeIn $duration;
}

@mixin onDismissal($fadeOutColor, $duration: 0.8s) {
  @keyframes fadeOut {
    0% {
      background-color: $fadeOutColor;
      opacity: 1;
      width: 5rem;
      height: 6rem;
      border-radius: 0.7rem;
    }

    60% {
      background-color: $fadeOutColor;
      opacity: 0.8;
      width: 5rem;
      height: 6rem;
      border-radius: 0.7rem;
    }

    100% {
      background-color: $fadeOutColor;
      opacity: 0;
      width: 10rem;
      height: 12rem;
      border-radius: 1.4rem;
    }
  }

  animation: fadeOut $duration backwards;
}

@mixin before($direction, $color, $width, $height, $radius, $content: "") {
  &:before {
    content: $content;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: $white;
    font-style: italic;
    font-weight: bold;
    width: $width;
    height: $height;
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    background-color: $color;
    border-radius: $radius;
    transform: $direction;
  }
}

@mixin summonAfter($color, $width, $height, $radius, $content: "") {
  &:after {
    @include onSummon($white);
    content: $content;
    width: $width;
    height: $height;
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    background-color: $color;
    border-radius: $radius;
  }
}

@mixin dismissAfter($content: "") {
  &:after {
    @include onDismissal($white);
    content: $content;
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
  }
}

@mixin summonTileProperties(
  $position,
  $width,
  $height,
  $transitionDelay,
  $animationDelay
) {
  width: $width;
  height: $height;
  transform: $position;
  transition-delay: $transitionDelay;
  animation-delay: $animationDelay;
  position: relative;
  top: 0;
  left: 0;
}

@mixin dismissTileProperties($position, $transitionDelay, $animationDelay) {
  transform: $position;
  transition-delay: $transitionDelay;
  animation-delay: $animationDelay;
  position: relative;
  top: -3rem;
  left: -2.5rem;
}

@mixin tileProperties($position, $gridArea) {
  grid-area: $gridArea;
  transform: $position;
  border-radius: 1.4rem;
  background-color: transparent;
}
